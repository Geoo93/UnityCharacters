Shader "FXLab/Other/RadialBlur" {
    Properties {
        _BlurStrength ("Strength", Range(0.001, 0.025)) = 0.01
        }
        SubShader { 
                Blend One Zero
                Tags { "Queue"="Overlay" "IgnoreProjector"="True" "RenderType"="Opaque"}
                Lighting Off
                Cull Off
                Fog { Mode Off }
                ZWrite Off
                                
                Pass {
                        CGPROGRAM
                        #pragma vertex vert
                        #pragma fragment frag
                        #pragma target 3.0
                        #include "UnityCG.cginc"
                        #include "Effects.cginc"
 
                        float _BlurStrength;
                                
                        struct appdata {
                                float4 vertex : POSITION;
                                float4 texcoord : TEXCOORD0;
                        };
 
                        struct v2f {
                                float4 pos : SV_POSITION;
                                float2 uv : TEXCOORD0;
                                float4 uv2 : TEXCOORD1;
                        };
                                                
                        v2f vert (appdata v) {
                                v2f o;
                                o.pos = mul( UNITY_MATRIX_MVP, v.vertex );
                                o.uv = float4( v.texcoord.xy, 0, 0 );
                                o.uv2 = o.pos;
                                return o;
                        }
                                
                        float4 frag( v2f o ) : COLOR
                        {
                                SCREEN_UV(o.uv2);
                                
                                half2 blurDir = normalize(screenUV.xy * 2 - 1);
                                half blurfactor = length(screenUV.xy - half2(0.5, 0.5));
                                //blurfactor = saturate(blurfactor);
                                half3 color = half3(0);
                                for (int i = 0; i < 16; ++i)
                                {
                                        color +=  SAMPLE_SCREEN(blurDir * blurfactor * i * _BlurStrength);
                                        //color +=  SAMPLE_REFRACTION(blurDir * i * _BlurStrength);
                                }
                                color /= 16;
                                
                                return fixed4(color, 1);
                        }
                        ENDCG
        }
    }
    Fallback off
}
