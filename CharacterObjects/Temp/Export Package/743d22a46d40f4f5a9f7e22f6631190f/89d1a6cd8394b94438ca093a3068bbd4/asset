using System;
using UnityEngine;
using System.Collections;

public class SceneIntro : MonoBehaviour {
	
	public Camera IntroCamera;
	public Material IntroMaterial;
	
	public float fadeTime = 4.0f;
	public float waitTime = 5.0f;
	
	private Texture2D[] Splashes = new Texture2D[3];
	private int screenIndex;
	
	private float elapsedTime = 0.0f;
	private float aktiveTime = 0.0f;
	
	private float distortionStrength = 0.0f;
	
	private bool IntroPlayed = false;
	
	private enum IntroEventTypes : int {  
		FadeIn = 0,
        FadeOut = 1,
        Idle = 2
    }
	
	private IntroEventTypes IntroEventType = IntroEventTypes.FadeIn;
	
	public Weapon_Sniper weapon_Sniper;

    void Awake() {
		InitializeSplashScreens();
    }
	
	private void InitializeSplashScreens(){
        Splashes[0] = (Texture2D)Resources.Load("Intro/Stage01");
		Splashes[1] = (Texture2D)Resources.Load("Intro/Stage02");
		Splashes[2] = (Texture2D)Resources.Load("Intro/Stage03");
    }
	
	void Start ()
	{
		IntroCamera.farClipPlane = 1;
		weapon_Sniper.Aktivate(false);
	}
	
	void OnGUI() {
		if(BarrelController.AppStart)
			return;
		
		if(IntroPlayed)
			return;
		
		if(Event.current.type.Equals(EventType.Repaint))
			IntroMaterial.SetFloat("_DistortionStrength", distortionStrength);
			IntroMaterial.SetFloat("_Transparency", aktiveTime);
			Graphics.DrawTexture(new Rect(0, 0, Screen.width, Screen.height), Splashes[screenIndex], IntroMaterial);
	}
	
	void Update ()
	{
		if(BarrelController.AppStart)
			return;
		
		if(IntroPlayed)
			return;

    	switch(IntroEventType) {
    		case IntroEventTypes.FadeIn:
				elapsedTime += Time.deltaTime;
				aktiveTime = elapsedTime / fadeTime;
				aktiveTime = Mathf.Clamp(aktiveTime, 0.0f, 1.0f);
				distortionStrength = aktiveTime;
			
				if(aktiveTime >= 1.0f) {
					elapsedTime = 0.0f;
					IntroEventType = IntroEventTypes.Idle;
				}
			    break;
			
    		case IntroEventTypes.FadeOut:
    			elapsedTime += Time.deltaTime;
				aktiveTime = 1 - elapsedTime / fadeTime;
				aktiveTime = Mathf.Clamp(aktiveTime, 0.0f, 1.0f);
				distortionStrength = 1 + elapsedTime / fadeTime * 3.0f;
			
				if(aktiveTime == 0.0f) {
					screenIndex++;
					distortionStrength = 1.0f;
					if(screenIndex < Splashes.Length) {
						elapsedTime = 0.0f;
						IntroEventType = IntroEventTypes.FadeIn;
					} else {
						IntroPlayed = true;
						weapon_Sniper.Aktivate(true);
						IntroCamera.farClipPlane = 1000.0f;
					}
				}
    			break;
				
    		case IntroEventTypes.Idle:
    			elapsedTime += Time.deltaTime;
			
				if(elapsedTime >= waitTime) {
					elapsedTime = 0.0f;
					IntroEventType = IntroEventTypes.FadeOut;
				}
			    break;
    
			default:
    			Debug.Log("Wrong Event Type");
    			break;
    	}
		
		if(Input.GetKeyDown(KeyCode.Space)) {
			IntroPlayed = true;
			weapon_Sniper.Aktivate(true);
			IntroCamera.farClipPlane = 1000.0f;
		}
			
	}
	
}
